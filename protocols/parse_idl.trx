(*
    Copyright Â© 2011 MLstate

    This file is part of OPA.

    OPA is free software: you can redistribute it and/or modify it under the
    terms of the GNU Affero General Public License, version 3, as published by
    the Free Software Foundation.

    OPA is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for
    more details.

    You should have received a copy of the GNU Affero General Public License
    along with OPA. If not, see <http://www.gnu.org/licenses/>.
*)
read default.trx
read ocaml_types.trx
read ocaml_keywords.trx
read ocaml_parser.trx

types:{{
open Ocaml
open Tgrammar

type idl =
  | IDLLet of Ocaml.expr
  | IDLType of string * Ocaml.type_expr * string option
  | IDLSar of string * string * string
}}

spc <- (Default.sharpcomment $ / Default.space $ / Default.mlcomment $)* $
delimitor <- ";;" $ / Default.eol $

let <- Ocaml_parser.Let spc delimitor? spc {{ IDLLet __1 }}

typident <- Ocaml_types.typevars? Ocaml_types.typeIdent $_ 
type <- Ocaml_types.typedeflist

deftype <- Ocaml_keywords.TYPE spc typident spc '=' spc type spc delimitor? spc
           {{ IDLType (__3, __7, None) }}

sar <- Ocaml_keywords.VAL Ocaml_parser.mlIdent spc ":" spc typident spc "->" spc typident spc delimitor? spc
       {{ IDLSar (__2,__6,__10) }}
     / Ocaml_keywords.VAL Ocaml_parser.mlIdent spc ":" spc typident spc delimitor? spc
       {{ IDLSar (__2,__6,"") }}

ext <- "external" spc typident spc ":" spc type spc "=" spc Default.string spc delimitor? spc {{ IDLType (__3,__7,Some __11) }}

+idls : {idl list} <- spc (sar / deftype / let / ext)* {{ __2 }}
